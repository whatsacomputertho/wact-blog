[{"id":"item91a956bd-7327-40af-919d-1","title":"What's 'What's a Computer, Though' Though?","created":1721493204,"location":"item-91a956bd-7327-40af-919d-111b3abdc41e","description":"It's ​been ​roughly two years since graduating from Penn State's Schreyer Honors College and joining IBM as a full-time software engineer.","text":"its &#8203;been &#8203;roughly two years since graduating from penn state's schreyer honors college and joining ibm as a full-time software engineer. &#8203; &#8203;during &#8203;this &#8203;time, &#8203;i've &#8203;had the chance to explore my field at very high-level, understand bit better who i am an engineer, person.\r\nfirst foremost, heart belongs mathematics.&#160; ever early days of education, was fascinated by beauty, elegance, philosophy behind now feel incomplete any time not learning or actively working on something that is rooted in mathematics.\r\nnext, &#8203;i &#8203;love engineering, blessed have opportunity make living writing software.&#160; unique ability connect people across world, community built around major part what drew me into it profession.&#160; growing learn importance thankless, active participation broader community, building eminence one's personal brand process.\r\nbelieve not, platform which this blog written (hax cms) free, open source, community-driven moreover, thanklessly maintained former professor mine; has mastered art through thankless contribution community.&#160; his contributions played role success first few ibm.\r\ni able hit ground running cloud-native engineering job thanks coverage containerization &#38; container orchestration our courses.&#160; these emerging technologies are enough their lifecycle traditional cs education does cover them.&#160; meanwhile they lie core modern development industry.&#8203;&#160; thus, wanted publish blogs hax return him, feed he managed cultivate over many while also own process.\r\nlooking forward, plan write&#160;mainly about technical work do free time.&#160; particular, lately i've been reading lot analysis use place where can reflect share some interesting things process.&#160; developed projects past (with more planned for future) write here.\r\ni so hopes exploring contributing communities topics love.&#160; no schedule, plan, just jumping experiment see comes it."},{"id":"item1407670b-7509-40c7-81e2-c","title":"What's Real Analysis, Though?","created":1722204429,"location":"item-1407670b-7509-40c7-81e2-cec368f61da1","description":"During my time at Penn State, I hesitated to fully commit to a mathematics degree.  By the time I did finally commit to pursuing a math degree, I only had enough time","text":"during my time at penn state, i hesitated to fully commit a mathematics degree.&#160; by the did finally pursuing math degree, only had enough pursue minor in mathematics.&#160; as result, felt though missed out on some of many essential topics beyond those opportunity study college.&#160; one such topic is analysis.\nto &#8203;compensate &#8203;for &#8203;this, &#8203;i &#8203;ended &#8203;up &#8203;buying &#8203;a &#8203;few &#8203;textbooks that planned self-study and learn more about continuous but course, life gets way, these books ended up sitting bookshelf for few years.&#160; is, until recently when decided was enough, going learning real analysis.\nmany who have brushed surface likely top-down understanding analysis.&#160; this because various results from analysis serve theoretical underpinnings calculus, continuity, differentiability, can forget, fundamental theorem calculus.&#160; results, albeit extremely practical, do not exactly lie very core otherwise we might call \"the theory calculus\".\nso if rigorous then what it?\nwhats &#8203;real analysis, though?\nreal its answers simple question: are numbers?&#160; all rough numbers are.&#160; know be written using decimal notation, as\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\pi = 3.141592...  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nwe &#8203;also &#8203;know that&#160;\\sqrt{2} \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n number,&#160; 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n number, and&#160;\\frac{2}{3} number.&#160; also function like&#160;f(x) x^{2} \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n plotted plane&#160;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\mathbb{r}^{2} like so.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbut &#8203;nonetheless, &#8203;we &#8203;lack numbers.&#160; our present has been built upon foundation intuition logically sound one.&#160; provides atop which intuitive rest safely.&#160; this, includes useful applications mathematical infinite, calculus.&#8203;&#160; it turns out, dealing with concept infinity mathematics, encounter counterintuitive logical pitfalls navigated help foundation.\nso, yes, sense does provide \"theory calculus\".&#160; calculus ultimately value proposition meant derived foundation.&#160; deals mystical properties often ignored utilitarian perspective calculus.\nultimately, &#8203;the converges (pun intended) construction rooted well-known constructions natural numbers&#160;\\mathbb{n} \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, integers&#160;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\mathbb{z} \n\n\n\n\n\n\n\n\n\n\n\n\n\n, rational \n\n\n\n\n\n\n\n\n\n\n\n\n\n\\mathbb{q} \n\n\n\n\n\n\n\n\n\n\n\n\n\n.&#160; most noteworthy part fact no new axioms incurred production.\nin other words, may show existence necessarily imply numbers.&#8203;\nwhat's 'what's though' though?\nmy goal blog series simply recount reading textbook focus elusive rather than aspect deriving intend perfectly self-contained explainer instead, i'd talk interesting things read, well questions arise mind them.\nfor reference, am stephen abbott (pdf, buy, solutions). &#8203; &#8203;if interested, you read along me, treat pre-chapter commentary book.\nlinked below each blogs composing series."},{"id":"item37e5ae52-d866-4d97-9794-5","title":"What's Completeness, Though?","created":1723313607,"location":"item-37e5ae52-d866-4d97-9794-5fa3286e5866","description":"One way to characterize the real numbers is to simply take an axiomatic approach. ​ ​That is to say that we will first boil their nature down to a single property","text":"one way to characterize the real numbers \\mathbb{r}  \n\n\n\n\n\n is simply take an axiomatic approach. &#8203; &#8203;that say that we will first boil their nature down a single property or statement from which can derive rest of essential properties. then assume this true without proof, and proceed build theoretical results atop property.\nto be clear, not sufficient construction since are asserting some fundamental justification.&#160; but a&#160;pragmatic eventually toward more pure construction.&#160; if show all required properties follow particular property, purify our construction, just need follows underlying logical foundation.\nwhats axiom completeness, though?\nhere i describe completeness\nwhat's &#8203;the &#8203;nested &#8203;interval &#8203;i &#8203;will &#8203;describe &#8203;property\nwhat's &#8203;a sequence, &#8203;sequences\nwhat's &#8203;bolzano-&#8203;weierstrass theorem, &#8203;bolzano-weierstrass theorem\nwhat's cauchy criterion, &#8203;cauchy criterion\nwhat's &#8203;foundation numbers, &#8203;explain &#8203;how &#8203;aoc, nip, bw, cc interconnected logically"},{"id":"item74313d48-ea34-4d70-8051-4","title":"What's Soil Science, Though?","created":1733169633,"location":"item-74313d48-ea34-4d70-8051-4988c0d38aa2","description":"Nearly a year ago, I came across a book selling for $3 at a small-town thrift store which caught my eye.  The book is called Urban Farming by Thomas J. Fox.","text":"nearly a year ago, i came across book selling for $3 at small-town thrift store which caught my eye.&#160; the is called&#160;urban farming by thomas j. fox.&#160; it covers topic of urban agriculture both birds eye view, thinking very abstractly and globally about current problems can be partially mitigated agriculture, from more narrow perspective do-it-yourself gardener.\namong various topics find intriguing surrounding gardening one in particular stood out to me - soil science.&#160; lies core itself any functional society.&#160; could argued that we must first engineer crop production before really anything else.&#160; hence, has long history being engineered human needs.\nwhat's more, science underlying engineering rooted complex biochemistry microecology.&#160; provides home millions species microorganisms often form symbiotic relationships with plants.&#160; these involve performing some chemical process plant exchange portion plant's resources.\nsoil particularly interesting part because aforementioned processes have not been reproduced scalable way engineering.&#160; is, outside selectively breeding plants responsible &#8203;executing those on our behalf.&#160; this perspective, potential serve as catalyst breakthroughs seen clearly.\nin &#8203;this &#8203;series &#8203;of &#8203;blogs, &#8203;i &#8203;would like document findings make continue read into engineering."},{"id":"item1ba2d0da-b384-4dc1-ac72-4","title":"What's FootballSim, Though?","created":1734996130,"location":"item-1ba2d0da-b384-4dc1-ac72-45fd43f8ffb1","description":"The thing I find unique about software engineering is the diversity in background.  Everyone has a unique story to tell about how they became a software engineer.  This project is my story.","text":"ive found that everyone has a unique story to tell about how they became software engineer.&#160; this project is my story.\nbackground\nas long as i can remember, brother and played football together in our back yard.&#160; we would each play on imaginary teams an league.&#160; consisted of from family friends, video game characters, characters made up along the way.&#160; were so into mini league ended writing spreadsheets including historic team rosters, results, champions, mvps, even hall fame.\na few years later, after had gone away for college, discovered brantsteele.com.&#160; website hosts various simulator games based popular reality tv shows, where one plug custom simulate season show.&#160; immediately revisited days simulated survivor which competed win $1 million challenge.\nthat &#8203;got &#8203;me &#8203;thinking, &#8203;what if like this, but football?&#160; it was hard find anything out there matching niche requirements.&#160; madden nfl closest match, didn't quite needs simplicity customization.\nso at&#160;that point 18-year-old me decided zero engineering skills could easily hack something instead.&#160; followed...\ni âtaught myself fundamentals javascript started developing projecti iterated through at least 5 variations project, none actually workedi âleft âcollege âto study âsoftware âengineering âas clearly lacked skillsi spent 4 penn state university studying mathematicsi âinterned, later accepted full-time job, ibm âworked âfor ânearly 3 âyears âat âibm âin real-world role\nafter &#8203;all &#8203;this &#8203;time (&#8203;7 &#8203;years &#8203;total &#8203;to &#8203;be &#8203;exact) am proud announce have finally developed working implementation simulator.&#160; are now using beloved league, having blast doing so.\nin &#8203;blog &#8203;series, &#8203;i &#8203;will provide technical overview designed, architected, implemented game.\nscope\nas i've grown engineer, learned value properly scoping projects.&#160; also personal experience pet projects especially vulnerable improper scoping.&#160; partially due passion connection them - strive perfection result never fully come fruition.\nwith iteration game, imposed very well-defined scope keep accountable, goals realistic.&#160; plan first approach problem highest level slowly drill down finer-grained details progress.\nmy goal implement machine learning model randomly generate final score (sometimes called \"box score\") given team's offensive defensive skill levels.&#160; initial requirements follows.\nthe should be good fit against real data, meaning there\n will some data science involved before any development \noccurs.once implemented, itself supporting utilities \nshould packaged library atop cli api \nimplemented.a âsingle-page web ui interacts with api.the build &amp; deployment full stack simple, repeatable, semi-automated both local production deployments.\nin series blogs walk progress pillar project's iteration, science, development, ci/cd, everything in-between.&#160; once completed, assess determine next new blog series."},{"id":"item6ef3afc7-d8a9-4284-b81f-0","title":"Football Box Score Web Scraper","created":1736098366,"location":"item-6ef3afc7-d8a9-4284-b81f-0c18b827225d","description":"The first step of producing software capable of randomly generating a real-world phenomenon (such as football scores) is simple: get the real-world data.","text":"the first step of producing software capable randomly generating a real-world phenomenon (such as football scores) is simple: get data.&#160; in this blog, i will reflect on web scraper developed to acquire data which was ultimately used produce my footballsim box score generator model.\ndata &#8203;retrieval\nthe &#8203;first &#8203;step &#8203;of statistical modeling against is, well, having so would need start journey by identifying source, and writing some automation retrieve structure its for me.\nin &#8203;my &#8203;case, &#8203;im looking scores, delight quickly discovered database near perfect source me.&#160; it contains entire super bowl era even scores dating well before era.&#160; only real challenge overcome leveraging fact that does not expose any sort rest api retrieving instead write scraping from html.\nwhat's scraping, though?\nweb &#8203;scraping form automated retrieval involves parsing content (typically html format) reformatting into more structured format storage analysis.&#160; large scale systems, take place after crawling.&#160; crawler traverse websites store raw, unprocessed content, later be processed stored scraper.\nopenai's language models, such gpt-3 4 powering their chatgpt software, were trained gathered scraped using crawlers scrapers.&#160; since then, significant effort has been made limit crawling across various websites.&#160; such, your experience may forgiving mine was.\nthe &#8203;football &#8203;database &#8203;web &#8203;scraper\ni rust-based cli database's html, storing json files locally.\nfor iteration, really needed implement one command - fbdb-webscrape boxscores.\nretrieve historic database\n\nusage: fbdb-webscrape[.exe] boxscores [options]\n\noptions:\n  -o, --output [output_format] output\n -f, --file [output_file] file to\n -y, --year [year] year [default: 2024]\n -h, --help print help\nthis allows user input year, an output format, file, parse database. &#8203; &#8203;i &#8203;used &#8203;it &#8203;to &#8203;produce like below (but with many scores!):\n[\n {\n \"date\": \"1/2/03\",\n \"away-team\": \"team a\",\n \"away-score\": 28,\n \"home-team\": b\",\n \"home-score\": 31\n },\n \"1/3/03\",\n c\",\n 13,\n d\",\n 6\n }\n]\nin future, plan circle back add new commands can scrape next iterations project.&#160; at time &#8203;project &#8203;consists &#8203;three rust files:\nmain.rs: main function runs execution cli. also helper functions requesting reqwest boxscore instance. cli.rs: definition. project clap_derive, extension clap crate collection structs enums equipped proper trait implementations derive macros.boxscore.rs: struct implementation. serde serde_json enable easily serialized deserialized format.\nfrom perspective make use are stars show.&#160; fundamental aspects these given code samples below.&#160; firstly, instantiated client fetch webpage:\n/// response string\nfn get_html_string() -&gt; string // initialize blocking client\n let = reqwest::blocking::client::new();\n \n query webserver response\n wrapped future result\n res client.get(\"https://example.com/\")\n .header(user_agent, \"mozilla/5.0 (windows nt 10.0; win64; x64) applewebkit/537.36 (khtml, gecko) chrome/88.0.4324.150 safari/537.36\")\n .send();\n text return it\n res_str res.unwrap().text().unwrap();\n res_str;\n}\nthen, html.&#160; particularly useful way css selectors (which provided via selector struct), shown below.\n/// all paragraph elements example.com\nfn parse_box_scores(res_html: &amp;string) vec&lt;string&gt; mutable vector strings append mut paragraph_strings: vec::new();\n\n html\n document scraper::html::parse_document(res_html);\n\n select elements\n paragraph_selector scraper::selector::parse(\"p\").unwrap();\n paragraphs document.select(&amp;paragraph_selector);\n\n each element, append\n paragraph_string: paragraph.text();\n paragraph_strings.push(paragraph_string);\n }\n\n strings\n paragraph_strings\n}\n\ni could have implemented bit properly.&#160; forward, refactor the&#160;functions fetching struct, then \"from\" struct.\nthis being project, hurdles faced working around 403 error codes when server.&#160; turns out, servers typically block requests unless request header identifies agent load content.&#160; case, user-agent mimicking browser content.\nover all, able finish implementation about day's worth programming, consider success.&#160; information usage found readme file.\nnext &#8203;steps\nnow we our data, better understand it.&#160; conduct what called exploratory analysis, summarizing visualizing ways attempt identify trends modeled.&#160; discussed detail blog post series, model."},{"id":"item0a937bce-00c2-4b0e-b55f-2","title":"Football Box Score Generator Model","created":1736114267,"location":"item-0a937bce-00c2-4b0e-b55f-21aa886ed7df","description":"To model a game as complex as American football requires a deep understanding of real-world football data.","text":"to model a game as complex american football requires deep understanding of real-world data.&#160; in this blog, i reflect on the exploratory data analysis and machine learning processes by which was able produce randomly generates box scores.\nexploratory &#8203;data &#8203;analysis\nnow that have score need, can start explore it better understand its characteristics identify trends be modeled.&#160; do so, my best bet would use various science tools python community, including pandas, matplotlib, scikit learn.\ndata &#8203;labeling\nrecall &#8203;the fact that, for model, want accept each teams offensive defensive skill levels inputs, then generate result their game.&#160; main challenge faced when approaching problem simply there are no explicitly given instead, need derive some sort level team, label with those training model.\nto &#8203;derive &#8203;my levels, first calculated median, mean, standard deviation points against team during season professional both offense defense.&#160; stored summaries two json files, offense.json defense.json.\nthen, plotted mean median (which highly correlated features) produced k-means clustering successfully clustered defense into five clusters where performance terms average against.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ni went back through year's individual scores labeled them participating team's offense_overall defense_overall.&#160; these values were integers ranging from 1-5 based cluster appeared in.&#160; if they high-scoring or low-scoring defense, assigned 5; vice versa 1, everything between.\nin final pass data, used entries like so\n{\n  \"offense_defense_differential\": 3,\n \"score\": 38,\n \"is_home\": false\n}\nwhich include / differential (that is, offense's minus defense's skill), game, whether home team.\nlabeled &#8203;that &#8203;all &#8203;of &#8203;box differentials (in whose accuracy confident enough), could engage real eda pursuit suitable model.\nthe &#8203;first &#8203;thing &#8203;i &#8203;looked &#8203;at &#8203;was &#8203;simply versus away teams.&#160; wanted answer question - is measurable field advantage football?&#160; turns out, is!\n\nhere seen historically outscored roughly 2 3 points.&#160; wasn't discover this, sportsbooks generally recognize 2.8 seems align findings here good sign over all.\nnext, summarized all across see any apparent trends.&#160; away.json home.json, included one 9 differentials.\n{\n \"norm_diff\": 0.5,\n \"mean_score\": 19.3722963645,\n \"std_score\": 8.8825934299\n}\nhere, &#8203;norm_diff represents normalized range [0, 1].&#160; other features observed games an off between two.\nthe clearly indicated me linear relationship score, exactly what had aimed for.&#160; also sensed parabolic but less intuition one.\nmodel &#8203;training\ni ended up four regression models, teams.\na âlinear âregression âmodel âof âmean âscore âover ânormalized âskill âdifferentiala âdegree-2 polynomial differential\nthe &#8203;models &#8203;are &#8203;pictured &#8203;below, graphed test data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodel runtime design\nso why did train particular models?&#160; plan will implement models directly as&#160;private functions rust struct.&#160; atop function fetch construct normal distribution, sample distribution score.\nthis &#8203;will discussed next blog,&#160;football generator application."},{"id":"item23e2afc5-3e91-4a94-b396-9","title":"Football Box Score Generator Application","created":1736257173,"location":"item-23e2afc5-3e91-4a94-b396-9ab780bf4604","description":"Understanding and modeling the real-world football data will only get us so far.  Now we need to architect an application around our model.","text":"understanding and modeling the real-world football data will only get us so far.&#160; now we need to architect an application around our model.&#160; in this blog, i walk through architecture of full-stack web developed my box score generator model.\narchitecture\nthe consists &#8203;the &#8203;following &#8203;components &#8203;at &#8203;a &#8203;high &#8203;level\na ârust âcrate (fbsim-core) containing core structures functions for running simulations. â âit âis âpublished âon âcrates.io, âwith âpublic documentation on doc.rsa âcli â(fbsim-cli) wrapping library providing a quick easy interface simulations command-linea ââapi â(fbsim-api) packaging as rest api making it available http clientsa âvanilla ui (fbsim-ui) composed vanillajs, browser-standard components which leverage fbsim back-end\n\nimplementation\nthe key technologies used initial implementation fbsim, role they played implementation, be discussed following sections.\nrust crate\na crate is rust languages module system.&#160; most cases, term synonymous with library, module, or package.&#160; foundation hosts crates.io, language's public-facing package server.&#160; one can think platform python's pypi javascript's npm.\nthe main underlying called fbsim-core, published crates.io crate.&#160; decided publish that could easily import dependency other projects different purposes.&#160; now, two such have plans develop are cli built atop library.&#160; these sections.\nthe fbsim-core &#8203;crate &#8203;consists &#8203;of &#8203;five &#8203;source &#8203;files\nlib.rs (src): standard crates.  case, simply defines all modules exposed by crate.boxscore.rs contains boxscore struct represents final game. basic constructors unit tests struct. useful was derived, serde &amp; json schema traits.gen.rs boxscoregenerator regression models normal distribution sampler described model blog. since were small, weights implemented constants. normalized skill differentials between home offense away defense (and vice versa) stored properties. gen method public generate i32 tuple.team.rs footballteam implementation. team name property, team's offensive defensive levels restricted range [0, 100].sim.rs boxscoresimulator wrapper empty exposes single function, sim, accepts borrowed instances (representing teams), normalizes their differentials, generates score, then returns instance.\nlooking back, do not see much split into separate structs - ultimately serve same purpose.&#160; lot what currently does turned private methods outermost (currently struct's sim method) being method.\nrust &#8203;cli\ncli acronym stands command-line interface.&#160; your is&#160;depends some degree os you run.&#160; may terminal, others command prompt.&#160; but over all, recognize bare-bones, black white mono-spaced wall text programmers use.\na &#8203;command-line just software written specifically executed command-line.&#160; thought would tool quickly execute validate functionality from testing give hint toward stability correctness software.\nthe &#8203;fbsim &#8203;cli its current form includes command: game sim.&#160; required arguments (paths files), optional (how where write simulation output).\n# -h\nthe subcommand arguments\n\nusage: fbsim[.exe] [options] --home &lt;home&gt; --away &lt;away&gt;\n\noptions:\n -o, --output &lt;output_format&gt; format output\n -f, --file &lt;output_file&gt; file to\n path specifying game's team\n &lt;away&gt; -h, --help print help\nin repository's readme find &#8203;short &#8203;gif me executing example teams, function concise enough copy-paste blog without risking taking up too space (though explore source code any sort context doing).\nfn main() {\n // parse args\n let fbsim_cli = fbsimcli::parse();\n\n perform subcommand\n fbsim_cli.command();\n match &amp;command fbsimsubcommand::game { } =&gt; fbsimgamesubcommand::sim(args) simulate_game(args.clone())\n }\n }\n}\nsimple, short sweet form.&#160; underestimate power tools.&#160; part reason wrote because envision potential future scenarios tandem web-based services.\nrust api\nthe api&#160;in computer programming general refer variety implementations enable applications \"talk each other\".&#160; prepending (representational state transfer) refines scope mean, networked server responds http(s) requests according specific architectural guidelines.\nacross landscape modern development,&#160;rest apis extremely common essential web-enabled applications.&#160; why made decision fbsim.&#160; forward-looking point view, knew eventually user interact api, exposing logic endpoint.\ni endpoint, post /game/sim, request &#38; response bodies given below.&#160; here, teams encoded object request.&#160; generated using response.\n\n\n\nexample request{\n \"home\": \"name\": \"string\",\n \"offense_overall\": 0,\n \"defense_overall\": 0\n },\n \"away\": }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexample response{\n \"home_team\": \"home_score\": \"away_team\": \"away_score\": 0\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto framework rocket.&#160; found rocket feel like port flask framework, attributes (similar look python decorators) placed endpoint declare properties) mapped function.\n#[openapi(tag \"games\")]\n#[post(\"/game/sim\", format=\"application/json\", data=\"&lt;matchup&gt;\")]\nfn game_sim(matchup: json&lt;footballmatchup&gt;) -&gt; json&lt;boxscore&gt; matchup body\n matchup: footballmatchup matchup.into_inner();\n\n simulate game\n box_score_sim boxscoresimulator::new();\n mut rng rand::thread_rng();\n box_score box_score_sim.sim(\n matchup.home_team(),\n matchup.away_team(),\n &amp;mut rng\n );\n\n return string\n json(box_score)\n}\none challenges took while developing automatically generating serving openapi via fbsim-api really feature rocket-okapi, handles auto-generation docs.&#160; #[openapi] attribute (seen above) assigned function.&#160; okapi parses signature doc comments populate documentation.\nin &#8203;my &#8203;case, schemas (footballmatchup respectively) custom fbsim-core.&#160; note thin struct, stores team.&#160; thus, derive unless derived jsonschema trait rocket-okapi.\nthis &#8203;would &#8203;mean &#8203;i &#8203;need &#8203;to &#8203;make &#8203;change &#8203;fbsim-core bring rocket-okapi dependency.&#160; very heavy-weight requires many dependencies own, value outside particular navigate problem, it's possible configure crates, route.\nto so, marked cargo.toml created it.&#160; then, &#8203;boxscore exaple, added cfg imports cfg_attr needed optionally rocket-okapi.\n#[cfg(feature \"rocket_okapi\")]\nuse rocket_okapi::okapi::schemars;\n#[cfg(feature rocket_okapi::okapi::schemars::jsonschema;\n// ... (additional imports)\n\n/// # `boxscore` struct\n///\n/// result game\n#[cfg_attr(feature \"rocket_okapi\", derive(jsonschema))]\n#[derive(clone, eq, partialeq, ord, partialord, debug, default, serialize, deserialize)]\npub home_team: string,\n home_score: i32,\n away_team: away_score: i32\n}\nnow, &#8203;rocket_okapi disabled default when adding dependent enabled downstream trait.\nvanilla js &#8203;component ui\na sounds like, component end meant interact.&#160; graphical interface?&#160; ultimately, work intended lead user-facing end-product ui.&#160; demonstration gif action included fbsim-ui reference.\nthe thing makes noteworthy use browser front-end.&#160; provides mechanism highly modular html, css, javascript.&#160; provide few examples below demonstrating mean this.\nfirst &#8203;all, &#8203;here âthe html template serves up.&#160; you'll notice surprisingly concise, upon closer inspection, refers non-standard tags, wact-nav wact-game-sim.&#160; wrote; defined exported javascript files imported html. &#8203; wact-game-sim tip iceberg, building-block also those imports.\nlet's wact-team-select introductory proof-of-concept.&#160; wact-team-select.js.&#160; first define element create new dom.&#160; element's inner add native composes together style tag css html.\nthe next class extends htmlelement base class.&#160; constructor, &#8203;attach open &#8203;shadow &#8203;root, clone aforementioned content shadow root. &#8203;though &#8203;not &#8203;included &#8203;in &#8203;below &#8203;snippet, generally constructor attach event listeners attached elements within component's root.\nconst wactteamselect document.createelement(\"template\");\nwactteamselect.innerhtml `...` goes here\nclass constructor() super();\n\n instantiate root append it\n this.root this.attachshadow({ \"mode\" : \"open\" });\n const wactteamselect.content.clonenode(true);\n this.root.append(clone);\n }\n}\nthe third observed attributes.&#160; how customize set values pass instantiated reference, src img (i.e. &lt;img src=\"...\"&gt;), href &lt;a href=\"...\"&gt;).\nthis done implementing observedattributes attributechangedcallback methods.&#160; changed.&#160; change select header toggled.&#160; helps implement getters setters setting them, fetch them class's if needed.&#8203;\nclass ...(more above)\n\n allowed attributes\n static observedattributes() [\"away\"];\n }\n\n update toggled\n toggleaway() construct component\n homeawaytext \"home\";\n (this.away) \"away\";\n text\n this.root.getelementbyid(\"team-select__name-input-label\");\n header.innerhtml homeawaytext;\n\n name\n nameinput this.root.getelementbyid(\"team-select__name-input\");\n nameinput.value `${homeawaytext} team`;\n handle changes attributechangedcallback(attribute, previousvalue, newvalue) (attribute.tolowercase() === \"away\") this.toggleaway();\n below)\n}\nat &#8203;this &#8203;point, &#8203;we &#8203;have &#8203;minimally viable component.&#160; there here approach total light bulb moment realized actually after fetching piece designed interoperate another.\nto prove concept, element, getter takes input root, structured (json). &#8203;you'll exact serializes de-serializes from.\nclass {\n// above)\n format\n team() this.root.getelementbyid(\"team-select__name-input\").value;\n offenseoverall parseint(this.root.getelementbyid(\"team-select__offense-input\").value);\n defenseoverall parseint(this.root.getelementbyid(\"team-select__defense-input\").value);\n name,\n offenseoverall,\n defenseoverall\n }\n// below)\n}\nthe &#8203;next-most abstract wact-matchup-select element.&#160; template, wact-team-select, another matchup.&#160; uses json-serialized footballmatchup.\nclass wactmatchupselect matchup() this.root.getelementbyid(\"matchup-select__home\").team;\n this.root.getelementbyid(\"matchup-select__away\").team;\n home,\n away\n below)\n}\nnow &#8203;finally &#8203;back &#8203;up &#8203;top-level wact-matchup-select, button, wact-box-score (which hidden default).&#160; button clicked, reaches out displays needs call wact-matchup select!\nnext &#8203;steps\nwe servers another.&#160; final) step figure should go about deploying servers.&#160; general, want able reliably deploy both locally testing, production (that is, internet-facing machines).\nin deployment, cover containerized deployment vm \nusing docker-compose, kubernetes-based container\n orchestration platform.&#160; further discuss ci \nservice github actions, went storing container images \ngithub's ghcr.io image registry."},{"id":"item8d9eed84-7def-4fb5-99c2-2","title":"Football Box Score Generator Deployment","created":1736616782,"location":"item-8d9eed84-7def-4fb5-99c2-2a0997247047","description":"With ​our ​model ​trained and application written, our final task will be to deploy our application.","text":"with &#8203;our &#8203;model &#8203;trained and application written, our final task will be to deploy application.&#160; as the rest of project, i wanted approach this phase deployment both simplicity long-term scalability in mind.&#160; process should semi-automated repeatable locally on remote machines.&#160; it possible fbsim a generic linux vm, kubernetes cluster.\nas such, obvious choice would containerize application, develop docker-compose-based deployment, kubernetes-based deployment.&#160; support these deployments satisfy \"semi-automated\" requirement, need ci regularly build my container images.\ncontinuous &#8203;integration\ni developed applied fbsim-ui fbsim-api repositories.&#160; across repositories, followed very similar pattern.\nwrite containerfile that builds âthe âapplication âand/or copies into imagewrite github actions workflow runs containerized pushes built image ghcr.iouse repositorys package manifest (cargo.toml, package.json) version &amp; tag images ghcr.io\ncontainerization\nfor fbsim-ui, containerization was quite simple.&#160; since javascript is an interpreted language, just make sure use base nodejs in, then copy source code static content directly its expected directory structure.\n# files builder for single-layer main image\nfrom scratch copyfiles\ncopy src/*.js /copyfiles/src/\ncopy static/css/*.css /copyfiles/static/css/\ncopy static/img/*.png /copyfiles/static/img/\ncopy static/img/*.jpg static/js/*.js /copyfiles/static/js/\ncopy static/views/*.hbs /copyfiles/static/views/\ncopy package.json package-lock.json license /copyfiles/\n\n# build\nfrom node:20-bookworm\ncopy --from=copyfiles /copyfiles/ /opt/fbsim-ui/\nworkdir /opt/fbsim-ui\nrun npm install\ncmd [\"npm\", \"run\", \"prod\"]\nfor fbsim-api, slightly more complicated due fact compiling api rocket framework involves dynamic linking.&#160; overcome challenge official guide which uses gnu objcopy combine all dynamically linked libraries together server executable.\ngithub ci\nwhile above containerfiles can locally, typical continuous integration (ci) when new contributed.&#160; provides mechanism platform, found reliable useful development public github.\ngithub workflows are placed .github/workflows subdirectory repository.&#160; defined by yaml specifications defines properties such as\nthe âsteps âof workflowthe âscript âexecuted âduring âeach âstep âworkflowwhich âevents âtrigger âworkflow\nand more.&#160; simple, they first extract from manifest; later used image.&#160; image, push ghcr.io, github's built-in registry.&#160; below full at time writing blog.\nname: build\non:\n  push:\n branches: [ \"main\" ]\njobs:\n build:\n permissions: write-all\n runs-on: ubuntu-latest\n steps:\n - uses: actions/checkout@v4\n name: image\n run: |\n # get cargo.toml\n echo \"[info] getting rust cargo.toml\"\n rust_package_version=$(\n awk -f ' = '$1 ~ /version/ { gsub(/[\\\"]/, \"\", $2); printf(\"%s\",$2) }' );\n \"[debu] version: ${rust_package_version}\"\n \n building pushing ghcr.io/whatsacomputertho/fbsim-api:v${rust_package_version}\"\n docker login \\\n -u whatsacomputertho -p ${{ secrets.github_token }} ghcr.io/whatsacomputertho\n . --tag ghcr.io/whatsacomputertho/fbsim-api:v${rust_package_version}\n ghcr.io/whatsacomputertho/fbsim-api:v${rust_package_version}\ngithub registry\nthe registry, ghcr.io (also sometimes called \"github packages\") example publish workflows.&#160; order images, token proper permissions must used.&#160; conveniently, automatically generates short-lived each run seen reference }}.\nthe &#8203;github &#8203;container &#8203;image &#8203;registry &#8203;is &#8203;publicly &#8203;readable, &#8203;meaning &#8203;that &#8203;anyone &#8203;can pull published so you, reading home, using exact same references we ghcr.io.\ndeployment\nnow comes actually deploying started simplest local machine compose.&#160; later, worked through publicly aws vm finally, exercise publicly, but single-node k3s cluster also hosted vm.\n&#8203;compose\nthe compose easiest exercise, simply involved coordinating port numbers two applications.&#160; ui equipped environment variable determine where send requests, setting matched number behind exposed host.\nservices:\n api:\n image: ghcr.io/whatsacomputertho/fbsim-api:${fbsim_api_version:-v1.0.0-alpha.1}\n ports:\n \"8080:8080\"\n ui:\n ghcr.io/whatsacomputertho/fbsim-ui:${fbsim_ui_version:-v1.0.0-alpha.1}\n \"8081:8081\"\n environment:\n fbsim_ui_domain=0.0.0.0\n fbsim_ui_port=8081\n fbsim_api_host=http://localhost:8080\nthis serve block toward \"production\" said, &#8203;\"production\" bit trickier.&#160; case acquisition tls certificate signed valid certification authority.&#160; must-have secure communication between server; without most browsers flag site \"potentially malicious\".\nto free set tools certbot let's encrypt. encrypt internet security research group (isrg), offers automated solution acquiring certificates isrg's ca. utility issue signing request against domain.\nonce issued, have running successfully respond automatic management (acme) challenge.&#160; once does, store granted within volume host.&#160; configure nginx web us.&#8203;\nhere configuration acme responder.&#160; you'll notice domain hardcoded something i'd like read future others easily reproduce themselves.\nevents {\n worker_connections 1024;\n}\n\nhttp listen 80;\n server_name whatsacomputertho.com;\n resolver 127.0.0.11;\n\n location /.well-known/acme-challenge/ root /var/www/certbot;\n }\n }\n}\nthis requests /.well-known/acme-challenge/&lt;token&gt; path placing given file /var/www/certbot. &#8203; &#8203;we &#8203;will &#8203;run &#8203;the mount host ./data/certbot/www /var/www/certbot.&#160; means writes /var/www/certbot, written machine, able location.\ncertbot additional ./data/certbot/conf /etc/letsencrypt write certificate, certificate.&#160; demonstration how completed below.&#8203;\n# acme-responder container\ndocker -d -it 80:80 --volume ./data/certbot/www:/var/www/certbot ghcr.io/whatsacomputertho/fbsim-acme-responder:v1.0.0-alpha.1\n\n# dry mode\n# select option 2\n# 2: saves necessary validation .well-known/acme-challenge/\n# nominated webroot path. separate http be\n# serving only (wildcards\n# not supported). (webroot)\ndocker ./data/certbot/conf:/etc/letsencrypt certbot/certbot certonly whatsacomputertho.com --webroot-path /var/www/certbot --dry-run\nonce certificates, do so, another \"reverse proxy\".&#160; traffic pointed server.&#160; apply encryption, route itself servers.\nevents 443 ssl;\n ssl_certificate /etc/letsencrypt/live/whatsacomputertho.com/fullchain.pem;\n ssl_certificate_key /etc/letsencrypt/live/whatsacomputertho.com/privkey.pem;\n include /etc/letsencrypt/options-ssl-nginx.conf;\n ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;\n / $upstream ui:8081;\n proxy_pass http://$upstream/;\n proxy_set_header x-real-ip $remote_addr;\n /game/sim api:8080;\n http://$upstream/game/sim;\n ^/js/(.*)$ http://$upstream/js/$1;\n ^/img/(.*)$ http://$upstream/img/$1;\n ^/css/(.*)$ http://$upstream/css/$1;\n }\n\n return 302 https://$server_name$request_uri;\n }\n}\nhere scenario configuration, parameterize repeat deployment.\nas &#8203;you &#8203;may &#8203;have &#8203;guessed, reverse proxy containerized, mounts ./data/cetbot/conf&#160;host (which wrote configuration) /etc/letsencrypt.&#160; you may throughout alias servers.&#160; because, spinning up docker-compose sets virtual network mapping service names their ips.\nhere &#8203;my &#8203;final &#8203;docker-compose.yaml:\nservices:\n proxy:\n ghcr.io/whatsacomputertho/fbsim-proxy:${fbsim_proxy_version:-v1.0.0-alpha.1}\n 443:443\n 80:80\n volumes:\n ./data/certbot/conf:/etc/letsencrypt\n fbsim_api_host=${fbsim_host:-https://whatsacomputertho.com}\nall needed spin services point -dfrom docker-compose.yaml located, encryption enabled.\nkubernetes\nsomething i've noticed is, lot people seem think benefits end docker-compose, really basic blocks much larger.&#160; computing orchestration platform automates many aspects managing \"cloud native\" software.&#160; work heavily role ibm, felt inclined project kubernetes.\nin &#8203;particular, &#8203;i experience distribution k3s.&#160; lightweight designed quick startup minimal required configuration.&#160; installed single extended vms, making easy pick scale your infrastructure requirements grow. &#8203;to &#8203;install &#8203;k3s &#8203;on &#8203;a &#8203;vm &#8203;as &#8203;simple piping install script bash, giving installation seconds.\ncurl -sfl https://get.k3s.io | sh -\nfor k3s, meaning ran did extend vms.\nkubernetes declarative platform.&#160; manages different types resources, user telling what sort resource have.&#160; works reconcile state, comparable state machine.&#160; further supports extensions define manage custom around there large ecosystem.\nwe &#8203;use &#8203;combination &#8203;of &#8203;native &#8203;kubernetes resources certificates.&#160; start one types, namespace.&#160; namespaces organize self-contained workspaces; commonly multiple teams team gets own namespace with.&#160; created application.\napiversion: v1\nkind: namespace\nmetadata:\n \"fbsim\"\n labels:\n \"fbsim\"\nnext &#8203;up &#8203;deployment &#8203;resource. âkubernetes âdeployment generally stateless services, track data over time.&#160; ours all, appropriate us.&#160; replicaset, pods, smallest deployable units kubernetes.\npods containers deploy, ports expose them, variables volumes mount, replicasets create duplicates pods load balance coming pods.\ndeployments finally tie allowing us down size replicaset.&#160; maybe day want 3 replicas service, 2.&#160; worth noting amended autoscaler, deployed based things cpu usage, or traffic.&#8203; &#8203;in case, kept simple replica pod.\napiversion: apps/v1\nkind: deployment\nmetadata:\n namespace: app.kubernetes.io/name: \"fbsim\"\nspec:\n replicas: 1\n selector:\n matchlabels:\n template:\n metadata:\n spec:\n containers:\n fbsim-ui\n \"ghcr.io/whatsacomputertho/fbsim-ui:v1.0.0-alpha.1\"\n env:\n fbsim_ui_domain\n value: \"0.0.0.0\"\n fbsim_ui_port\n \"8081\"\n fbsim_api_host\n \"https://api.fbsim.whatsacomputertho.com\"\n containerport: 8081\n fbsim-api\n \"ghcr.io/whatsacomputertho/fbsim-api:v1.0.0-alpha.1\"\n 8080\n fbsim-api\ni &#8203;then &#8203;mapped âservice exposes cluster's network.\napiversion: service\nmetadata:\n protocol: tcp\n port: targetport: 8080\nat still accessible.&#160; resource, ingress, ingress-nginx controller definitions come pre-installed anything special cluster.\ni ingresses, api.&#160; ultimately, ingresses roughly thing plus some networking tasks, creating dns entries services.&#8203; &#8203;below i'll ingress example.\napiversion: networking.k8s.io/v1\nkind: ingress\nmetadata:\n \"fbsim-ui-tls-ingress\"\n annotations:\n spec.ingressclassname: traefik\n traefik.ingress.kubernetes.io/router.middlewares: \"fbsim-fbsim-redirect-https@kubernetescrd\"\nspec:\n rules:\n host: \"fbsim.whatsacomputertho.com\"\n http:\n paths:\n path: /\n pathtype: prefix\n backend:\n service:\n port:\n number: 8081\nyou might annotation referring traefik router middleware.&#160; refers created, middleware, definition offered traefik.&#160; middleware redirects https, had configured deployment.\napiversion: traefik.containo.us/v1alpha1\nkind: middleware\nmetadata:\n \"fbsim-redirect-https\"\n redirectscheme:\n scheme: https\n permanent: true\nbut &#8203;wait, if we're redirecting &#8203;how &#8203;do enable https ingress?&#160; hadn't done yet.&#160; cert manager open extension (this does k3s) basically whole dance deployment.\nwe &#8203;first &#8203;need &#8203;cert &#8203;manager (crds) aren't k3s.\nkubectl --validate=false https://github.com/jetstack/cert-manager/releases/download/1.16.3/cert-manager.crds.yaml\nthen &#8203;create issuer resource.\napiversion: cert-manager.io/v1\nkind: issuer\nmetadata:\n \"fbsim-letsencrypt-prod\"\n \"fbsim-letsencrypt-prod\"\nspec:\n acme:\n email: \"my@email.com\"\n server: https://acme-v02.api.letsencrypt.org/directory\n privatekeysecretref:\n solvers:\n http01:\n ingress:\n class: traefik\nthen &#8203;finally, &#8203;equip &#8203;ingress &#8203;with &#8203;signed &#8203;certificate manager, update so.&#160; here add pointing issuer, initiate manager.&#160; section secret stored name being granted.\napiversion: cert-manager.io/issuer: tls:\n secretname: \"fbsim-ui-tls\"\n hosts:\n \"fbsim.whatsacomputertho.com\"\n&#8203;i &#8203;haven't &#8203;quite &#8203;explained &#8203;go &#8203;about &#8203;creating cluster.&#160; can, vms kubectl [manifest-file] freshly respective files, any resources.&#160; helm chart, allows template ways entire package.\nyou &#8203;find âmy âhelm âchart here, instructions chart here."},{"id":"item3069036a-2ec7-4276-a1d9-c","title":"Next Steps for FootballSim","created":1738516272,"location":"item-3069036a-2ec7-4276-a1d9-c9a3131b8265","description":"What's next for FootballSim now that the MVP is complete?","text":"whats next for footballsim now that the mvp is complete?&#160; there are various aspects of that&#160;i think need improvement.&#160; each these enhancements vary in terms their timeline (short-term versus long-term) and \"well-definedness\".&#160; here, i will collect my thoughts following &#8203;regarding &#8203;next &#8203;steps footballsim.\nshort-term &#8203;steps\nthere a few things described throughout initial blog series as \"what would have done differently retrospect\".&#160; observations serve really great low-hanging fruit me to cover right away. &#8203; &#8203;i &#8203;went &#8203;ahead &#8203;and &#8203;raised &#8203;issues findings:\nparameterize domain name fbsim-acme-responder fbsim-proxymigrate âfootballmatchup âstruct into fbsim-core librarycombine âboxscoresimulator âand âboxscoregenerator âstructscomponents âshould âre-size âfor âmobile âwindow\nthroughout usage footballsim, noticed model regularly generate some quite unlikely scores, like 19 29.&#160; furthermore, ties seemed happen much more frequently than they should.&#160; both purely intuitive, but upon further investigation be measurable fixable.&#160; raised issues this:\nproduce âscore âdistribution âhistogram âlookup tablefilter âscores âthrough âfrequency âtableestimate overall tie probability, probability by skill differentialre-simulate âgame âin âthe âevent âof âa âtie âbased âon âobserved âprobabilityvalidate âfinal âgenerator âmodel\nas far short-term improvements concerned, this pretty covers what was able determine with help brother.&#160; going forward, it good build up slightly broader feedback loop.&#160; surely improvement flew over head, others notice almost immediately.&#160; i'd uncover.&#160; such, might consider running form alpha testing fairly soon.\nonce gather decent amount through (and possibly beta testing), i'll plan release an \"official\" v1.0.0 footballsim.&#160; process, may make ci/cd here there, establish branching strategy repositories.\nmedium-term steps\ni'm starting out new capabilities on top of, or addition to, existing final score generator model.&#160; thinking semver, view ultimately minor releases, since just extend not fundamentally re-work api. &#8203;that said, larger projects fleshed course multiple weeks.\nfor now, i've planned single issue project.&#160; treat \"epics\" which contain individual stories underneath them underlying component needs work related project.\nimplement âleague âsimulation âcapabilityimplement âquarterly âbox model\nthe &#8203;first epic,&#160;implement âcapability, inspired spreadsheet brother using orchestrate our mini football league.&#160; lists team, levels offense defense, logos, conference, division.&#160; includes schedule season, playoff picture, bracket, all we wrote entirely manually.&#160; incredibly useful if could simply declare and/or automatically.\nthe second epic, implement model, spirit incrementally drilling down finer finer-grained models iterate what's more, one emerging core pillars is&#160;narrative context.&#160; want ability analyze games develop own narratives around them, storylines imaginary teams.&#160; generating quarter-by-quarter breakdown enhance experience allowing us identify fun &#8203;late-game comebacks overtime games.\nlong-term steps\nthe&#160;goal entire project has always been produce play-by-play can full game log, player statistics.&#160; started write high-level epic encapsulating large-scale goal: model.\nwith &#8203;the &#8203;work &#8203;have do i'm viewing short medium-term, it's safe say we're still ways away from stop dreaming about look when finally implemented.&#160; while back (in prior failed iterations), drew mid-fidelity prototype ui aim for:\n\nover all, basically \"play back\" log though were happening real time.&#160; course, should also speed playback fact probably default).&#160; having sort functionality place open door \"big bet\" features very distant future, keep myself ;)"},{"id":"item24d33761-5989-4ee7-a11b-c","title":"Score and Tie Frequency Improvements","created":1739638341,"location":"item-24d33761-5989-4ee7-a11b-ce0f582e288e","description":"\n","text":"while &#8203;using the &#8203;footballsim mvp &#8203;to &#8203;simulate &#8203;our &#8203;mini football &#8203;league, &#8203;we &#8203;found &#8203;that &#8203;the model &#8203;would &#8203;regularly &#8203;spit &#8203;out &#8203;scores &#8203;are &#8203;unlikely in &#8203;a &#8203;real &#8203;football &#8203;game. &#8203; &#8203;for &#8203;example, &#8203;simulated one &#8203;game &#8203;which ended &#8203;with &#8203;25-22 &#8203;final &#8203;score. &#8203;this final &#8203;score &#8203;isnt &#8203;technically &#8203;impossible, &#8203;but each component of &#8203;is &#8203;one &#8203;off &#8203;from &#8203;much &#8203;more &#8203;likely score &#8203;of &#8203;24-21.\nspeaking terms statistics and probability, &#8203;instance &#8203;an &#8203;not indicative larger-scale &#8203;problem.&#160; &#8203;having &#8203;many &#8203;these games which &#8203;resulted &#8203;in unlikely &#8203;score, &#8203;had &#8203;growing intuitive &#8203;sense certain be &#8203;observed far &#8203;too &#8203;frequently than &#8203;they &#8203;should &#8203;be. &#8203;and &#8203;thus, &#8203;wanted to &#8203;investigate problem &#8203;further.\nscore &#8203;frequency &#8203;exploratory data &#8203;analysis\nfirst, we needed &#8203;find &#8203;overall frequency scores real &#8203;world &#8203;data. ran&#160;some &#8203;basic &#8203;data &#8203;analysis produced &#8203;following &#8203;historgram &#8203;depicting âfrequency âof âreal âscores.\n\nhere &#8203;see that &#8203;24 &#8203;25 differ by &#8203;factor &#8203;10, &#8203;22 &#8203;21 &#8203;differ &#8203;by &#8203;4.&#160; &#8203;so sense &#8203;being less likely &#8203;than, say 24-21, &#8203;backed up this data.&#8203;\nnow &#8203;what &#8203;sort &#8203;distribution &#8203;does &#8203;produce &#8203;today, &#8203;without &#8203;any &#8203;modification? &#8203;answer &#8203;question, âi âdeveloped âa ânew âcommand âin âfbsim-cli, fbsim âgame âbenchmark. &#8203;command &#8203;runs &#8203;1.2 million &#8203;simulations, then aggregates results &#8203;simulations show us at &#8203;high &#8203;level &#8203;how &#8203;model performs &#8203;terms &#8203;its statistical properties.&#160; &#8203;over &#8203;time, &#8203;want &#8203;improve &#8203;model's &#8203;statistical accuracy &#8203;when tested using &#8203;benchmark &#8203;test.\ni &#8203;then &#8203;plotted âthe âdata âfrom âbenchmark âtest âagainst âfbsim-core âv1.0.0-alpha.3 &#8203;another histogram &#8203;plot.\n\nthis &#8203;pretty &#8203;perfect &#8203;normal &#8203;curve, with no &#8203;local &#8203;fuzziness.&#160; means &#8203;achieved roughly &#8203;same as 24 &#8203;despite &#8203;their &#8203;real-world &#8203;10x difference &#8203;frequency.&#160; &#8203;it's &#8203;also centered &#8203;mysteriously when &#8203;compared &#8203;against &#8203;data, &#8203;we'll investigate &#8203;shortly.\nto attempt &#8203;solve &#8203;problem, i decided &#8203;take &#8203;approach.&#160; &#8203;i would pre-load a âlookup âtable actual âobserved âfrequencies for âeach âscore. upon &#8203;generating &#8203;adjust âit âusing âtable.\nfirst, ââlookup âgenerated âscore n, âwell âas âits neighboring âscores ân-1 ân+1âthen âconstruct âcategorical âdistribution over âthose âthree where their probability is scaled relative observed from lookup tablefinally, ârandomly âdraw âget âadjusted âscore\nthis &#8203;seemed have &#8203;positive &#8203;effect &#8203;on &#8203;frequency, &#8203;began &#8203;appear &#8203;often judging &#8203;intuition. sort &#8203;did &#8203;it &#8203;have performance?\n\nthis &#8203;surprisingly &#8203;beneficial &#8203;behavior &#8203;model.&#160; &#8203;visually, &#8203;looks &#8203;like &#8203;better &#8203;fit &#8203;comparison original &#8203;further comparing &#8203;mean &#8203;squared &#8203;errors &#8203;base &#8203;adjusted frequencies &#8203;supports &#8203;fact is, &#8203;large, improvement.\nbase mean squared error: 7.5289\nadj  4.1097\nyou &#8203;may &#8203;noticed &#8203;that, between &#8203;model, only did &#8203;change, &#8203;global - it &#8203;now &#8203;centered &#8203;appropriately.&#160; &#8203;no &#8203;mistake, &#8203;actually found &#8203;major bug process &#8203;validating âfbsim &#8203;fixed &#8203;producing &#8203;those &#8203;two &#8203;histograms.\nbenchmark test &#8203;findings &#8203;&#38; &#8203;bug &#8203;fixes\nlet's &#8203;quick &#8203;detour &#8203;talk about &#8203;some findings made during benchmark testing (and subsequent fixes) &#8203;before &#8203;moving onto tie enhancements made.\nwhy &#8203;was &#8203;off-center?\nin &#8203;fbsim &#8203;cli command, table &#8203;lists &#8203;skill &#8203;differential alongside &#8203;standard deviation &#8203;both &#8203;home &#8203;away &#8203;teams. &#8203;testing way off &#8203;been.\nhere &#8203;output &#8203;test:\nhome distribution:\nskill diff std score\n-100 23.1506 7.6162\n-80 24.2101 8.1887\n-60 25.3185 8.6021\n-40 26.4397 8.9407\n-20 27.5418 9.2587\n0 28.6667 9.4145\n20 29.7236 9.5225\n40 30.8259 9.5603\n60 31.8998 9.4884\n80 33.0837 9.3034\n100 34.1129 9.0627\n\naway 22.1655 6.4798\n-80 23.0604 7.2377\n-60 23.9255 7.8504\n-40 24.8286 8.3757\n-20 25.7620 8.7426\n0 26.6536 9.0463\n20 27.5140 9.2175\n40 28.4326 9.3427\n60 29.2490 9.2932\n80 30.1968 9.1622\n100 31.0702 8.9115\nwhile &#8203;teams:\n\"('score', 'mean')\": {\n \"0.0\": 11.5590551181,\n \"0.125\": 13.8620155039,\n \"0.25\": 17.0134387352,\n \"0.375\": 19.1485774499,\n \"0.5\": 22.3723214286,\n \"0.625\": 24.8021442495,\n \"0.75\": 27.5766828591,\n \"0.875\": 31.6327372765,\n \"1.0\": 34.9343434343\n}\nand &#8203;similarly 9.3671875,\n 12.2220421394,\n 14.2501797268,\n 16.8838776568,\n 19.3722963645,\n 22.0789733465,\n 25.3302358828,\n 28.9319444444,\n 31.5263157895\n}\nthe &#8203;upper &#8203;end &#8203;spectrum both home away teams seems &#8203;be &#8203;roughly &#8203;aligned, but &#8203;lower &#8203;seems extremely misaligned.&#160; misalignment &#8203;centering base &#8203;saw &#8203;earlier!\nreflecting on &#8203;this, &#8203;my &#8203;brother &#8203;notice &#8203;league &#8203;there &#8203;were &#8203;few surprise contenders &#8203;beaten multiple opponents &#8203;than &#8203;were. figured our &#8203;intuition &#8203;around win might &#8203;&#8203;just &#8203;outright &#8203;wrong, turns out were just being gas-lit model.\nso &#8203;causing bug? &#8203;as &#8203;turns &#8203;out, &#8203;stupid &#8203;simple &#8203;typo! &#8203;accidentally misnamed âconstant names âfor âregression âmodels' âintercepts âand coefficients, &#8203;intercept treated &#8203;coefficient, &#8203;vice &#8203;versa. âfixed âthat âissue âthis âpr, &#8203;subsequently &#8203;results &#8203;testing.\nhome 11.2780 7.1944\n-80 13.4964 7.8423\n-60 15.7159 8.3578\n-40 18.0300 8.8404\n-20 20.3076 9.1898\n0 22.5839 9.4275\n20 24.9194 9.5291\n40 27.2036 9.5548\n60 29.5982 9.4513\n80 31.8540 9.2936\n100 34.2193 9.0829\n\naway 9.1762 6.0629\n-80 11.3444 6.8845\n-60 13.4862 7.5883\n-40 15.6616 8.1947\n-20 17.7987 8.6510\n0 20.0065 9.0046\n20 22.2411 9.2066\n40 24.4323 9.3496\n60 26.7023 9.3638\n80 28.9100 9.1980\n100 31.1470 8.9210\nsimulation &#8203;speed &#8203;regression\nwhile output &#8203;fbsim-core &#8203;v1.0.0-alpha.3 (pre-score enhancement) &#8203;v1.0.0-alpha.13 &#8203;performance, there &#8203;huge &#8203;difference &#8203;long &#8203;took &#8203;games &#8203;across &#8203;versions.\nin âv1.0.0-alpha.3, âtook â5.63 âseconds âto âsimulate 1.2 âmillion âgamesin âv1.0.0-alpha.13, â90.29 â1.2 âgames\nso &#8203;process &#8203;fixing &#8203;performance &#8203;issue, &#8203;made &#8203;tradeoff &#8203;speed. &#8203;happened?&#160; well, &#8203;looking back &#8203;at &#8203;source &#8203;code, &#8203;i'm &#8203;doing &#8203;things are speed &#8203;regression.\n/// filters box frequency. score's nearest\n /// neighbors retrieved construct probability\n mass function categorical distribution. distribution is\n sampled score.\n fn filter_score(&amp;self, score: i32, rng: &amp;mut impl rng) -&gt; i32 // if 0, return 0 1 impossible\n == 0\n }\n\n create table\n let mut freq_lut = scorefrequencylookup::new();\n freq_lut.create();\n\n get nearest score\n low freq_lut.frequency(score 1).unwrap();\n mid freq_lut.frequency(score).unwrap();\n high + \n distribution\n dist categorical::new(&amp;[low f64, f64]).unwrap();\n score_adjustment_r: f64 dist.sample(rng);\n score_adjustment (score_adjustment_r i32) 1_i32;\n adj_score score_adjustment;\n adj_score\n }\nfirst, &#8203;am &#8203;allocating &#8203;de-allocating &#8203;every &#8203;time run &#8203;simulation. &#8203;alternatively, &#8203;could &#8203;simply store &#8203;static &#8203;reference immutable instantiate &#8203;once.\n&#8203;second, &#8203;btreemap table, has o(log n) performance, &#8203;hashmap o(1) performance.&#160; &#8203;granted, &#8203;lookup &#8203;table &#8203;only &#8203;size-80 &#8203;all &#8203;contributor, &#8203;change &#8203;switch &#8203;between &#8203;collections &#8203;under &#8203;hood, &#8203;well &#8203;do so &#8203;performance.\ni &#8203;released fbsim-core &#8203;v1.0.0-alpha.14 includes these âchanges &#8203;re-ran &#8203;testing.&#160; time, able &#8203;run &#8203;million &#8203;just &#8203;8.18 âseconds, &#8203;bringing &#8203;us &#8203;back &#8203;down &#8203;into &#8203;reasonable &#8203;range."}]